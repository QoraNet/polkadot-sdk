name: EVM test suite

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
  merge_group:
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

permissions:
  pull-requests: write

jobs:
  isdraft:
    uses: ./.github/workflows/reusable-isdraft.yml
  preflight:
    needs: isdraft
    uses: ./.github/workflows/reusable-preflight.yml

  differential-tests-revive-dev-node-revm:
    needs: [preflight]
    runs-on: ${{ needs.preflight.outputs.RUNNER }}
    if: ${{ needs.preflight.outputs.changes_rust }}
    timeout-minutes: 60
    container:
      image: ${{ needs.preflight.outputs.IMAGE }}
    steps:
      - name: Checkout the Polkadot SDK
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Update the Installed Python
        run: apt-get update && apt-get install -y python3-pip python3
      - name: Building the dependencies from the Polkadot SDK
        run: forklift cargo build --locked --profile release -p pallet-revive-eth-rpc -p revive-dev-node
      - name: Checkout the Differential Tests Repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          repository: paritytech/revive-differential-tests
          ref: f1a911545ef0cfc1e1bfa5c91fc4d6194a273c52
          path: revive-differential-tests
          submodules: recursive
      - name: Installing Retester
        run: forklift cargo install --locked --path revive-differential-tests/crates/core
      - name: Creating a workdir for retester
        run: mkdir workdir
      - name: Downloading & Initializing the compilation caches
        run: |
          curl -fL --retry 3 --retry-all-errors --connect-timeout 10 -o cache.tar.gz "https://github.com/0xOmarA/revive-differential-tests-compiler-cache/releases/download/v1.0.0/cache.tar.gz"
          tar -zxf cache.tar.gz -C ./workdir
      - name: Running the Differential Tests
        run: |
          retester test \
            --test ./revive-differential-tests/resolc-compiler-tests/fixtures/solidity/simple \
            --test ./revive-differential-tests/resolc-compiler-tests/fixtures/solidity/complex \
            --test ./revive-differential-tests/resolc-compiler-tests/fixtures/solidity/translated_semantic_tests \
            --platform revive-dev-node-revm-solc \
            --concurrency.number-of-nodes 10 \
            --concurrency.number-of-threads 10 \
            --concurrency.number-of-concurrent-tasks 50 \
            --working-directory ./workdir \
            --revive-dev-node.path ./target/production/revive-dev-node \
            --eth-rpc.path ./target/production/eth-rpc
      - name: Creating a markdown report of the test execution
        run: |
          mv ./workdir/*.json report.json
          python3 ./.github/scripts/process-differential-tests-report.py
      - name: Posting the report as a comment on the PR
        uses: marocchino/sticky-pull-request-comment@v2
        if: ${{ contains(github.event.pull_request.labels.*.name, 'T7-smart_contracts') }}
        with:
          header: diff-tests-report
          path: report.md

  evm-test-suite:
    needs: [preflight]
    runs-on: ${{ needs.preflight.outputs.RUNNER }}
    if: ${{ needs.preflight.outputs.changes_rust }}
    timeout-minutes: 60
    container:
      image: ${{ needs.preflight.outputs.IMAGE }}
    env:
      # Enable debug assertions since we are running optimized builds for testing
      # but still want to have debug assertions.
      RUSTFLAGS: "-C debug-assertions"
      RUST_BACKTRACE: 1
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: script
        run: |
          forklift cargo build --locked --release -p pallet-revive-eth-rpc --bin eth-rpc
          forklift cargo build --locked --release -p revive-dev-node --bin revive-dev-node

      - name: Checkout evm-tests
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          repository: paritytech/evm-test-suite
          ref: d20230d0a70ad1159ee75b4c56a47e85173f19e5
          path: evm-test-suite

      - uses: denoland/setup-deno@v1
        with:
          deno-version: v2.x

      - name: script
        run: |
          echo "Change to the evm-test-suite directory"
          cd evm-test-suite

          deno --version

          echo "Check that binaries are in place"
          export REVIVE_DEV_NODE_PATH=$(readlink -f ../target/release/revive-dev-node)
          export ETH_RPC_PATH=$(readlink -f ../target/release/eth-rpc)
          echo $REVIVE_DEV_NODE_PATH $ETH_RPC_PATH

          echo "== Running pvm tests ==j"
          START_REVIVE_DEV_NODE=true START_ETH_RPC=true deno task test:pvm

          echo "== Running evm tests =="
          START_REVIVE_DEV_NODE=true START_ETH_RPC=true deno task test:evm

  confirm-required-test-evm-jobs-passed:
    runs-on: ubuntu-latest
    name: All test misc tests passed
    # If any new job gets added, be sure to add it to this array
    needs:
      - evm-test-suite
    if: always() && !cancelled()
    steps:
      - run: |
          tee resultfile <<< '${{ toJSON(needs) }}'
          FAILURES=$(cat resultfile | grep '"result": "failure"' | wc -l)
          if [ $FAILURES -gt 0 ]; then
            echo "### At least one required job failed ❌" >> $GITHUB_STEP_SUMMARY
            exit 1
          else
            echo '### Good job! All the required jobs passed 🚀' >> $GITHUB_STEP_SUMMARY
          fi
